import java.time.LocalDateTime
import java.time.format.DateTimeFormatter
import java.util.Comparator
import kotlin.concurrent.thread

open class Warenhaus() {
    var buecher: MutableList<Buch> = mutableListOf(
            Krimi("Der letzte Schrei", 12.99, true),
            Krimi("Und er schrie immer noch", 15.99, true),
            Krimi("Das mordende Schaf", 9.99, true),
            Krimi("Der letzte √úberlebende", 29.99, false),
            Roman("Der Herr der sieben Meere", 29.99, false),
            Roman("Der Kuchen Streik", 19.99, false),
            Roman("K√§ptain Langohr", 6.99, true),
            Roman("Es war einmal", 9.99, true))
    var elektro: MutableList<Elektroartikel> = mutableListOf(
            Fernseher("Telefunken", 599.00, false),
            Fernseher("Grundig TV 5310", 999.00, true),
            Fernseher("Grundig TV 7250", 599.00, true),
            Fernseher("Samsung", 1199.00, true),
            Lautsprecher("Telefunken", 299.00, 250, true),
            Lautsprecher("Bosse", 1599.00, 800, true),
            Lautsprecher("Amazon Alexa", 39.99, 25, false),
            Lautsprecher("Jambra", 59.99, 55, true))
    var kundenListe: MutableMap<String, String> = mutableMapOf(
            "Test" to "4711"
    )
    var aadminListe: MutableMap<String, String> = mutableMapOf(
            "Test001" to "4715"
    )
    var warenKorb: MutableList<Produkt> = mutableListOf()
    fun logIn() {

        var loggedIn: Boolean = false
        var username: String
        var pin: String


        println("Geben sie ihren Username ein:")
        username = readln()
        println("Geben sie ihre Pin ein:")
        pin = readln()

        loggedIn = username in kundenListe && pin == kundenListe[username]!!
        if (loggedIn)
            println("Willkommen, $username")
        else
            println("Login fehlgeschlagen.")

    }

    fun neuregistrieren() {
        println("Dieser Shop ist erst ab dem 12 Lebensjahr zug√§nglich. Bitte gib dein Alter ein: ")
        try {
            var alter = readln().toInt()

            if (alter > 11)
                println("Willkommen im Shop ‚ù§Ô∏è")
            else
                println("Du bist leider noch zu jung f√ºr unsere Angebote. üê®")
        } catch (ex: Exception) {
            neuregistrieren()
        }
        var userName: String
        var pin: String
        println("Sie k√∂nnen sich nun Registrieren. Bitte geben Sie Ihren gew√ºnschten Namen ein:")
        userName = readln()
        if (userName in kundenListe)
            println("Dieser Name existiert bereits, bitte w√§hlen sie einen anderen")
        else
            println("bitte geben sie Ihren gew√ºnschten Pin ein")
        pin = readln()
        kundenListe.put(userName, pin)
        println("Ihr neuer Account mit den Daten $userName und $pin wurde ersstellt")
    }

    fun adminlogin() {
        var loggedIn: Boolean = false
        var adminname: String
        var pin: String


        println("Geben sie ihren Username ein:")
        adminname = readln()
        println("Geben sie ihre Pin ein:")
        pin = readln()

        loggedIn = adminname in aadminListe && pin == aadminListe[adminname]!!
        if (loggedIn)
            println("Willkommen, $adminname")
        else
            println("Login fehlgeschlagen.")

    }

    fun einkaufbuecher() {
        for ((artikel, preis)in buecher.withIndex()){
            println("$artikel $preis")
        }
        println("Bitte geben sie ihren Artikel ein (Nur die Artikelbezeichnung) :")
        var bestellung = readln()
        var found = false
        for (buch in buecher) {
            if (bestellung == buch.artikelName) {
                println("Vielen Dank, wir haben den Artikel $bestellung ihren Warenkorb zugef√ºgt.")
                warenKorb.add(buch)
                found = true
                break
            }
        }
        if (!found) {
            println("Artikel derzeit nicht vorhanden")
        }
        println(" Derzeit befinden sich folgende Artikel in ihrem Warenkorb $warenKorb")


    }

    fun einkaufelectro() {
        for ((artikel, preis)in elektro.withIndex()){
            println("$artikel $preis")
        }
        println("Bitte geben sie ihren Artikel ein(Bitte nur mit der Artikelbezeichnung):")
        var bestellung = readln()
        var found = false
        for (elektroArtikel in elektro) {
            if (bestellung == elektroArtikel.artikelName) {
                println("Vielen Dank, wir haben den Artikel $bestellung ihren Warenkorb zugef√ºgt.")
                warenKorb.add(elektroArtikel)
                found = true
                break
            }
        }
        if (!found) {
            println("Artikel derzeit nicht vorhanden")
        }
        println(" Derzeit befinden sich folgende Artikel in ihrem Warenkorb $warenKorb")
    }

    open fun bezahlen() {

        var gesamtpreis = 0.0
        var pr√§mientext = ""
        val now = LocalDateTime.now()
        val formatter = DateTimeFormatter.ofPattern("dd.MM.yyyy HH:mm:ss")
        val formattedDateTime = now.format(formatter)


        for (artikel in warenKorb) {
            gesamtpreis += artikel.preis
        }
        if (gesamtpreis < 50.0) {
            pr√§mientext = "Sie erhalten noch keine Pr√§mie"
        } else if (gesamtpreis < 100.0) {
            pr√§mientext = "Sie erhalten einen 5‚Ç¨ Amazon-Gutschein f√ºr ihren n√§chsten Einkauf"
        } else if (gesamtpreis < 150.0) {
            pr√§mientext = "Sie erhalten einen 15‚Ç¨ Amazon-Gutschein f√ºr ihren n√§chsten Einkauf"
        } else if (gesamtpreis < 200.0) {
            pr√§mientext = "Sie erhalten einen 25‚Ç¨ Amazon-Gutschein f√ºr ihren n√§chsten Einkauf"
        } else {
            pr√§mientext = "Sie erhalten einen 50$ Gutschein f√ºr ihren n√§chsten Einkauf"
        }
        println("-------------------------------------------------------")
        println(pr√§mientext)
        val kunde = Kunde("")
        println("-------------------------------------------------------")
        println("Gesamtpreis:                        $gesamtpreis")
        println("-------------------------------------------------------")
        println("Vielen Dank f√ºr Ihren Einkauf")
        println("$formattedDateTime")
        kunde.bezahlen(gesamtpreis)
        warenKorb.clear()

    }

    fun paypalBezahlen() {
        var gesamtpreis = 0.0
        var pr√§mientext = "."
        val now = LocalDateTime.now()
        val formatter = DateTimeFormatter.ofPattern("dd.MM.yyyy HH:mm:ss")
        val formattedDateTime = now.format(formatter)


        for (artikel in warenKorb) {
            gesamtpreis += artikel.preis
        }
        if (gesamtpreis < 50.0) {
            pr√§mientext = "Sie erhalten noch keine Pr√§mie"
        } else if (gesamtpreis < 100.0) {
            pr√§mientext = "Sie erhalten einen 5‚Ç¨ Amazon-Gutschein f√ºr ihren n√§chsten Einkauf"
        } else if (gesamtpreis < 150.0) {
            pr√§mientext = "Sie erhalten einen 15‚Ç¨ Amazon-Gutschein f√ºr ihren n√§chsten Einkauf"
        } else if (gesamtpreis < 200.0) {
            pr√§mientext = "Sie erhalten einen 25‚Ç¨ Amazon-Gutschein f√ºr ihren n√§chsten Einkauf"
        } else {
            pr√§mientext = "Sie erhalten einen 50$ Gutschein f√ºr ihren n√§chsten Einkauf"
        }
        println("-------------------------------------------------------")
        println(pr√§mientext)
        val kunde = Kunde("")
        println("-------------------------------------------------------")
        println("Gesamtpreis:                        $gesamtpreis")
        println("-------------------------------------------------------")
        println("$formattedDateTime")
        kunde.bezahlen(gesamtpreis)
        warenKorb.clear()

    }

    fun hauptMenue(Warenhaus: String) {
        val kunde = Kunde("")
        println("""
        Was m√∂chten sie tun:
        [1]     Guthaben abfragen
        [2]     Geld einzahlen(Guthaben)
        [3]     B√ºcher kaufen
        [4]     Elektroartikel kaufen
        [5]     Warenkorb
        [6]     Wie m√∂chten Sie zahlen  
        [7]     LogOut      
    """.trimIndent())

        var input: String = readln()

        when (input) {
            "1" -> {
                println("Ihr aktuelles Guthaben betr√§gt: ${kunde.guthaben}")
                hauptMenue(Warenhaus)
            }

            "2" -> {
                println("Welchen Betrag m√∂chten Sie auf Ihr Einkaufskonto einzahlen: ")
                var einzahlung = readln().toDouble()
                kunde.guthaben = einzahlung + kunde.guthaben
                println("Ihr neues Guthaben betr√§gt: ${kunde.guthaben}‚Ç¨")
                hauptMenue(Warenhaus)
            }

            "3" -> {
                println(" ${einkaufbuecher()}")
                hauptMenue(Warenhaus)
            }

            "4" -> {
                println(" ${einkaufelectro()}")
                hauptMenue(Warenhaus)

            }

            "5" -> {
                println("In Ihrem Warenkorb befinden sich zur Zeit : $warenKorb")
                hauptMenue(Warenhaus)
            }

            "6" -> {
                println(" ${bezahlenAuswahl(Warenhaus)}")
                hauptMenue(Warenhaus)
            }

            "7" -> {
                println("Danke f√ºr Ihren Besuch, SSie sind erfolgreich abgemeldet : ${loginMenu(Warenhaus)}")
            }

            else -> {
                println("Ung√ºltige Eingabe")
                hauptMenue(Warenhaus)
            }}}


    fun loginMenu(Warenhaus: String) {
        println("""
        Herzlich Willkommen im Phantasie Store
        Was m√∂chten sie tun?
        [0]     Registrieren
        [1]     Login
        [2]     Admin Login
    """.trimIndent())
        var input: String = readln()

        when (input) {

            "0" -> {
                println("Danke f√ºr Ihre Neuanmeldung ${neuregistrieren()}")
                hauptMenue(Warenhaus)
            }

            "1" -> {
                logIn()
                hauptMenue(Warenhaus)
            }

            "2" -> {
                println("Hallo Admin ${adminlogin()}")
                hauptMenue(Warenhaus)
            }
        }
    }
    fun bezahlenAuswahl(Warenhaus: String) {
    println("""
        Wie m√∂chten Sie zahlen
        [0]     Mit Einkaufsguthaben
        [1]     Paypal
        
    """.trimIndent())
    var input: String = readln()

    when (input) {

        "0" -> {
            bezahlen()
        }

        "1" -> {
            paypalBezahlen()
        }
    }
}  }









